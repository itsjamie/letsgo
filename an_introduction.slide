An Introduction: Let's Go!
Primatives for the Web
19 Feb 2015

Jeff Hann
@obihann

Jamie Stackhouse
@itswzee

* Why Go exists

- Conncurrency is hard in most langauges.
- Native compilation doesn't need to take hours.
- Tooling should be better.

* Setup

In Go, once you've installed me, you get access to go binary.

.link https://golang.org/doc/install Walkthrough for installing Go

.image gooutput.png

* Tooling

- goimports -- Code formatting and automatic imports
- godoc -- Documentation
- gorename -- Refactoring
- gocode -- Code Completion
- go run -race -- Race Detection
- go vet -- Think Compiler Warnings

* Why should we use Go?

You get a webserver that powers dl.google.com in your standard library, _net/http_.

* Hello World

.play hello.go

Running through websockets, sent to a Go backend, executed, and program output is sent back, I thought it was neat.

* Garbage Collected

*Yay!* _or_ *Nay?*

* Documentation

Keep the documentation simple...

  // NullTime provides a method by which we can support Nullable fields when scanning from PgSQL.
  // For example when defining the Times type we use NullTime for the DeletedAt field.
  //
  // NullTime.Valid is used to check if this is a NullTime or if it has been
  // set with a time.Time object.
  type NullTime struct {
    Time  time.Time
    Valid bool //Will be true if Time is not NUL
  }

.image doc.png

* Packaging - what's public?

Go works on a namespace basis

_github.com/golibs/example_

.code example.go

* Memory management

You are given full access to the underlying resources that are used.

- Slices
- Pointers

* API servers

Reference benchmarks as to why Go is a good choice. Suck it Java.

* API servers (Models)

* API servers (Routing)

* Resources

.link http://blog.golang.org/concurrency-is-not-parallelism
.link http://blog.golang.org/race-detector
